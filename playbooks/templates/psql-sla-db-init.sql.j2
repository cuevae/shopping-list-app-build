--
-- PostgreSQL Shopping List App database INITIAL setup
--

--- If sla database is NOT created yet run:
---     sudo -u postgres createdb sla_db && sudo -u postgres psql sla_db < psql-sla-db-init.sql
--- Otherwise, only the following is necessary:
---     sudo -u postgres psql sla_db < psql-sla-db-init.sql

--- *********************
--- SQL Script START
--- *********************

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: sla; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA sla;
ALTER SCHEMA sla OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

---------------------------------------------------------------------
--- Table Definitions START
---

--
-- Name: shopping_lists; Type: TABLE; Schema: sla; Owner: postgres
--

CREATE TABLE sla.shopping_lists (
    id integer NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE sla.shopping_lists OWNER TO postgres;

--
-- Name: shopping_lists_history; Type: TABLE; Schema: sla; Owner: postgres
--

CREATE TABLE sla.shopping_lists_history (
    entry_id integer NOT NULL,
    sl_id integer NOT NULL,
    change_desc character varying(255) NOT NULL,
    "timestamp" timestamp with time zone NOT NULL
);


ALTER TABLE sla.shopping_lists_history OWNER TO postgres;

--
-- Name: shopping_lists_history_entry_id_seq; Type: SEQUENCE; Schema: sla; Owner: postgres
--

ALTER TABLE sla.shopping_lists_history ALTER COLUMN entry_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME sla.shopping_lists_history_entry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shopping_lists_id_seq; Type: SEQUENCE; Schema: sla; Owner: postgres
--

ALTER TABLE sla.shopping_lists ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME sla.shopping_lists_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shopping_lists_items; Type: TABLE; Schema: sla; Owner: postgres
--

CREATE TABLE sla.shopping_lists_items (
    id integer NOT NULL,
    sl_id integer NOT NULL,
    item_name character varying(255) NOT NULL,
    item_qty smallint DEFAULT 1 NOT NULL
);


ALTER TABLE sla.shopping_lists_items OWNER TO postgres;

--
-- Name: shopping_lists_items_history; Type: TABLE; Schema: sla; Owner: postgres
--

CREATE TABLE sla.shopping_lists_items_history (
    entry_id integer NOT NULL,
    item_id integer NOT NULL,
    sl_id integer NOT NULL,
    change_desc character varying(255) NOT NULL,
    date timestamp with time zone NOT NULL
);


ALTER TABLE sla.shopping_lists_items_history OWNER TO postgres;

--
-- Name: shopping_lists_items_history_entry_id_seq; Type: SEQUENCE; Schema: sla; Owner: postgres
--

ALTER TABLE sla.shopping_lists_items_history ALTER COLUMN entry_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME sla.shopping_lists_items_history_entry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shopping_lists_items_id_seq; Type: SEQUENCE; Schema: sla; Owner: postgres
--

ALTER TABLE sla.shopping_lists_items ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME sla.shopping_lists_items_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shopping_lists_history shopping_lists_history_entry_id_key; Type: CONSTRAINT; Schema: sla; Owner: postgres
--

ALTER TABLE ONLY sla.shopping_lists_history
    ADD CONSTRAINT shopping_lists_history_entry_id_key UNIQUE (entry_id);


--
-- Name: shopping_lists_history shopping_lists_history_pkey; Type: CONSTRAINT; Schema: sla; Owner: postgres
--

ALTER TABLE ONLY sla.shopping_lists_history
    ADD CONSTRAINT shopping_lists_history_pkey PRIMARY KEY (entry_id, sl_id);


--
-- Name: shopping_lists_items_history shopping_lists_items_history_entry_id_key; Type: CONSTRAINT; Schema: sla; Owner: postgres
--

ALTER TABLE ONLY sla.shopping_lists_items_history
    ADD CONSTRAINT shopping_lists_items_history_entry_id_key UNIQUE (entry_id);


--
-- Name: shopping_lists_items_history shopping_lists_items_history_pkey; Type: CONSTRAINT; Schema: sla; Owner: postgres
--

ALTER TABLE ONLY sla.shopping_lists_items_history
    ADD CONSTRAINT shopping_lists_items_history_pkey PRIMARY KEY (entry_id, item_id, sl_id);


--
-- Name: shopping_lists_items shopping_lists_items_id_key; Type: CONSTRAINT; Schema: sla; Owner: postgres
--

ALTER TABLE ONLY sla.shopping_lists_items
    ADD CONSTRAINT shopping_lists_items_id_key UNIQUE (id);


--
-- Name: shopping_lists_items shopping_lists_items_pkey; Type: CONSTRAINT; Schema: sla; Owner: postgres
--

ALTER TABLE ONLY sla.shopping_lists_items
    ADD CONSTRAINT shopping_lists_items_pkey PRIMARY KEY (id, sl_id, item_name);


--
-- Name: shopping_lists shopping_lists_pkey; Type: CONSTRAINT; Schema: sla; Owner: postgres
--

ALTER TABLE ONLY sla.shopping_lists
    ADD CONSTRAINT shopping_lists_pkey PRIMARY KEY (id);


--
-- Name: shopping_lists_history shopping_lists_history_sl_id_fkey; Type: FK CONSTRAINT; Schema: sla; Owner: postgres
--

ALTER TABLE ONLY sla.shopping_lists_history
    ADD CONSTRAINT shopping_lists_history_sl_id_fkey FOREIGN KEY (sl_id) REFERENCES sla.shopping_lists(id) ON DELETE CASCADE;


--
-- Name: shopping_lists_items_history shopping_lists_items_history_item_id_fkey; Type: FK CONSTRAINT; Schema: sla; Owner: postgres
--

ALTER TABLE ONLY sla.shopping_lists_items_history
    ADD CONSTRAINT shopping_lists_items_history_item_id_fkey FOREIGN KEY (item_id) REFERENCES sla.shopping_lists_items(id) ON DELETE CASCADE;


--
-- Name: shopping_lists_items shopping_lists_items_sl_id_fkey; Type: FK CONSTRAINT; Schema: sla; Owner: postgres
--

ALTER TABLE ONLY sla.shopping_lists_items
    ADD CONSTRAINT shopping_lists_items_sl_id_fkey FOREIGN KEY (sl_id) REFERENCES sla.shopping_lists(id) ON DELETE RESTRICT;


---------------------------------------------------------------------
--- PostgREST API access details
---------------------------------------------------------------------

CREATE ROLE web_anon nologin;
GRANT usage ON SCHEMA sla TO web_anon;
GRANT SELECT ON sla.shopping_lists TO web_anon;
GRANT SELECT ON sla.shopping_lists_items TO web_anon;

CREATE ROLE authenticator LOGIN PASSWORD '.nonsecurepass321!';
GRANT web_anon TO authenticator;

-- *******************************
-- SQL Script END
-- *******************************

--- test

INSERT INTO sla.shopping_lists (name) VALUES ('my first shopping list');
INSERT INTO sla.shopping_lists (name) VALUES ('another one');
INSERT INTO sla.shopping_lists (name) VALUES ('s33s3');